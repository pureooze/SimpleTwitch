@inject ITwitchService TwitchService
@inject NavigationManager NavigationManager

@using System.Reflection
@using System.Text.Json
@using System.Windows.Forms
@using SimpleTwitch.Data
@using SimpleTwitch.Services
@using TwitchEverywhere.Core.Types.RestApi.Users
@using TwitchEverywhere.Core.Types.RestApi.Wrappers
@using System.Net

@if( m_loading ) {
    <div class="sidebar">
        <nav class="nav-items">
            <div class="nav-item small-button">
                <button class="nav-icon-button">
                    <img class="nav-icon" alt="" src="https://static-cdn.jtvnw.net/jtv_user_pictures/xarth/404_user_150x150.png"/>
                </button>
            </div>
        </nav>
    </div>
} else {
    <div class="sidebar">
        <nav class="nav-items">

            @foreach (UserEntry user in m_users) {
                <div class="nav-item small-button">
                    <button class="nav-icon-button" @onclick="() => OnClick(user.Login)">
                        <img class="nav-icon" alt="@user.DisplayName" src="@user.ProfileImageUrl"/>
                    </button>
                </div>
            }
        </nav>
    </div>
}

@code {
    List<UserEntry> m_users = [];
    private bool m_loading = true;
    
    protected override async Task OnInitializedAsync() {
        Assembly assembly = GetType().Assembly;
        const string resourceName = "SimpleTwitch.Resources.Json.fav.json";
        await using Stream? stream = assembly.GetManifestResourceStream(resourceName);
        using StreamReader reader = new(stream);
        string json = await reader.ReadToEndAsync();
        List<string> usernames = JsonSerializer.Deserialize<List<string>>(json) ?? [];
        
        foreach (string username in usernames) {
            GetUsersResponse response = await TwitchService.GetUsers( username.ToLower() );
            
            if( response.StatusCode != HttpStatusCode.OK ) {
                continue;
            }
            
            m_users.Add(response.ApiResponse.Data[0]);
        }
        
        m_loading = false;
    }
    
    private void OnClick( string loginName ) {
        NavigationManager.NavigateTo( $"/stream/{loginName}" );
    }

}
